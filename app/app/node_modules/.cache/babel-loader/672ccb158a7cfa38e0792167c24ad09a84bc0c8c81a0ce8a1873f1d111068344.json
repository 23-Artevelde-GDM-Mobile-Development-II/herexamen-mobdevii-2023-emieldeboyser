{"ast":null,"code":"var _jsxFileName = \"/Users/emieldeboyser/Documents/0_School/2022-2023/Herexamens/MOBDEV 2/newWebshop/app/app/src/contexts/AuthContainer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport LoginScreen from \"../Pages/Login/LoginScreen\";\n\n// Define the key used to store the user in local storage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"SVS_USER\";\n\n// Create a new context object for authentication\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Function to retrieve user object from local storage if it exists\nconst getUserFromStorage = () => {\n  const user = localStorage.getItem(KEY);\n  if (user) {\n    return JSON.parse(user);\n  }\n  return null;\n};\n\n// AuthContainer component that wraps child components with authentication functionality\nconst AuthContainer = ({\n  children\n}) => {\n  _s();\n  // Initialize user state using the getUserFromStorage function\n  const [user, setUser] = useState(getUserFromStorage());\n  const [globalError, setGlobalError] = useState();\n\n  // useEffect hook to store user object in local storage when it changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(KEY, JSON.stringify(user));\n    } else {\n      localStorage.removeItem(KEY);\n    }\n  }, [user]);\n\n  // Function to set user state to null when user logs out\n  const handleLogout = () => {\n    setUser(null);\n  };\n\n  // Function to set user state to a user object when user logs in\n  const handleLogin = user => {\n    setUser(user);\n    setGlobalError(null);\n  };\n\n  // If user exists, wrap child components with the AuthContext Provider and pass user and logout function as props\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user: user,\n        logout: handleLogout,\n        setGlobalError: setGlobalError\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If user does not exist, return LoginScreen component and pass handleLogin function as a prop\n  return /*#__PURE__*/_jsxDEV(LoginScreen, {\n    onLogin: handleLogin,\n    initialError: globalError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook to access AuthContext in child components\n_s(AuthContainer, \"9RUoCfR6OuKzmLG4+dLcPSQfk/4=\");\n_c = AuthContainer;\nexport const useAuthContext = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n\n// Export AuthContainer component as default\n_s2(useAuthContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContainer;\nvar _c;\n$RefreshReg$(_c, \"AuthContainer\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","LoginScreen","jsxDEV","_jsxDEV","KEY","AuthContext","getUserFromStorage","user","localStorage","getItem","JSON","parse","AuthContainer","children","_s","setUser","globalError","setGlobalError","setItem","stringify","removeItem","handleLogout","handleLogin","Provider","value","logout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","initialError","_c","useAuthContext","_s2","$RefreshReg$"],"sources":["/Users/emieldeboyser/Documents/0_School/2022-2023/Herexamens/MOBDEV 2/newWebshop/app/app/src/contexts/AuthContainer.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport LoginScreen from \"../Pages/Login/LoginScreen\";\n\n// Define the key used to store the user in local storage\nconst KEY = \"SVS_USER\";\n\n// Create a new context object for authentication\nconst AuthContext = createContext();\n\n// Function to retrieve user object from local storage if it exists\nconst getUserFromStorage = () => {\n  const user = localStorage.getItem(KEY);\n  if (user) {\n    return JSON.parse(user);\n  }\n  return null;\n};\n\n// AuthContainer component that wraps child components with authentication functionality\nconst AuthContainer = ({ children }) => {\n  // Initialize user state using the getUserFromStorage function\n  const [user, setUser] = useState(getUserFromStorage());\n  const [globalError, setGlobalError] = useState();\n\n  // useEffect hook to store user object in local storage when it changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(KEY, JSON.stringify(user));\n    } else {\n      localStorage.removeItem(KEY);\n    }\n  }, [user]);\n\n  // Function to set user state to null when user logs out\n  const handleLogout = () => {\n    setUser(null);\n  };\n\n  // Function to set user state to a user object when user logs in\n  const handleLogin = (user) => {\n    setUser(user);\n    setGlobalError(null);\n  };\n\n  // If user exists, wrap child components with the AuthContext Provider and pass user and logout function as props\n  if (user) {\n    return (\n      <AuthContext.Provider\n        value={{\n          user: user,\n          logout: handleLogout,\n          setGlobalError: setGlobalError,\n        }}\n      >\n        {children}\n      </AuthContext.Provider>\n    );\n  }\n\n  // If user does not exist, return LoginScreen component and pass handleLogin function as a prop\n  return <LoginScreen onLogin={handleLogin} initialError={globalError} />;\n};\n\n// Custom hook to access AuthContext in child components\nexport const useAuthContext = () => {\n  return useContext(AuthContext);\n};\n\n// Export AuthContainer component as default\nexport default AuthContainer;\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,OAAOC,WAAW,MAAM,4BAA4B;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAG,UAAU;;AAEtB;AACA,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMS,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACL,GAAG,CAAC;EACtC,IAAIG,IAAI,EAAE;IACR,OAAOG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;EACzB;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC;EACA,MAAM,CAACP,IAAI,EAAEQ,OAAO,CAAC,GAAGf,QAAQ,CAACM,kBAAkB,CAAC,CAAC,CAAC;EACtD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC;;EAEhD;EACAD,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,EAAE;MACRC,YAAY,CAACU,OAAO,CAACd,GAAG,EAAEM,IAAI,CAACS,SAAS,CAACZ,IAAI,CAAC,CAAC;IACjD,CAAC,MAAM;MACLC,YAAY,CAACY,UAAU,CAAChB,GAAG,CAAC;IAC9B;EACF,CAAC,EAAE,CAACG,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzBN,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACA,MAAMO,WAAW,GAAIf,IAAI,IAAK;IAC5BQ,OAAO,CAACR,IAAI,CAAC;IACbU,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,IAAIV,IAAI,EAAE;IACR,oBACEJ,OAAA,CAACE,WAAW,CAACkB,QAAQ;MACnBC,KAAK,EAAE;QACLjB,IAAI,EAAEA,IAAI;QACVkB,MAAM,EAAEJ,YAAY;QACpBJ,cAAc,EAAEA;MAClB,CAAE;MAAAJ,QAAA,EAEDA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW,CAAC;EAE3B;;EAEA;EACA,oBAAO1B,OAAA,CAACF,WAAW;IAAC6B,OAAO,EAAER,WAAY;IAACS,YAAY,EAAEf;EAAY;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzE,CAAC;;AAED;AAAAf,EAAA,CA5CMF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA6CnB,OAAO,MAAMqB,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,OAAOpC,UAAU,CAACO,WAAW,CAAC;AAChC,CAAC;;AAED;AAAA6B,GAAA,CAJaD,cAAc;AAK3B,eAAerB,aAAa;AAAC,IAAAoB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}